<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin - Coupon Management</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
    />
    <%- include("../../views/partials/admin/header") %>
    <style>
      /* Global Styles */
      body {
        font-family: "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI",
          Roboto, sans-serif;
        line-height: 1.6;
        background-color: #f3f4f6;
      }

      /* Main Content */
      .main-content {
        margin-left: 260px;
        padding: 2.5rem;
        min-height: 100vh;
        transition: margin-left 0.3s ease;
      }

      @media (max-width: 1024px) {
        .main-content {
          margin-left: 0;
          padding: 1.5rem;
        }
      }

      /* Header */
      .header-title {
        font-size: 1.875rem;
        font-weight: 700;
        color: #1f2937;
        display: flex;
        align-items: center;
        gap: 0.75rem;
      }

      /* Card Container */
      .card {
        background-color: #ffffff;
        border-radius: 0.75rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
          0 2px 4px -2px rgba(0, 0, 0, 0.05);
        padding: 2rem;
      }

      /* Form Styles */
      .form-label {
        font-size: 0.875rem;
        font-weight: 500;
        color: #374151;
        margin-bottom: 0.5rem;
        display: block;
      }

      .form-input {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #d1d5db;
        border-radius: 0.5rem;
        font-size: 0.875rem;
        transition: border-color 0.2s, box-shadow 0.2s;
      }

      .form-input:focus {
        outline: none;
        border-color: #2563eb;
        box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.2);
      }

      .form-input:invalid:focus {
        border-color: #ef4444;
        box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.2);
      }

      .form-small {
        font-size: 0.75rem;
        color: #6b7280;
        margin-top: 0.25rem;
        display: block;
      }

      .form-checkbox {
        width: 1.25rem;
        height: 1.25rem;
        cursor: pointer;
      }

      /* Button Styles */
      .btn {
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        font-size: 0.875rem;
        font-weight: 500;
        transition: background-color 0.2s, transform 0.1s;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
      }

      .btn-primary {
        background-color: #2563eb;
        color: #ffffff;
      }

      .btn-primary:hover {
        background-color: #1d4ed8;
      }

      .btn-primary:focus {
        outline: none;
        box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.3);
      }

      .btn-danger {
        background-color: #ef4444;
        color: #ffffff;
      }

      .btn-danger:hover {
        background-color: #dc2626;
      }

      .btn-danger:focus {
        outline: none;
        box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.3);
      }

      .btn-neutral {
        background-color: #e5e7eb;
        color: #374151;
      }

      .btn-neutral:hover {
        background-color: #d1d5db;
      }

      .btn-neutral:focus {
        outline: none;
        box-shadow: 0 0 0 3px rgba(107, 114, 128, 0.3);
      }

      /* Filter Buttons */
      .filter-btn {
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        font-size: 0.875rem;
        font-weight: 500;
        transition: background-color 0.2s;
      }

      /* Table Styles */
      .table-container {
        overflow-x: auto;
      }

      .table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
      }

      .table th {
        font-size: 0.875rem;
        font-weight: 600;
        color: #374151;
        padding: 1rem;
        text-align: left;
        border-bottom: 2px solid #e5e7eb;
      }

      .table td {
        padding: 1rem;
        font-size: 0.875rem;
        color: #4b5563;
        border-bottom: 1px solid #e5e7eb;
      }

      .table-hover tbody tr:hover {
        background-color: #f9fafb;
      }

      .badge {
        padding: 0.5rem 1rem;
        border-radius: 9999px;
        font-size: 0.75rem;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
      }

      /* Modal Styles */
      .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        z-index: 1050;
      }

      .modal.show {
        display: block;
      }

      .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.6);
        z-index: 1040;
        transition: opacity 0.2s;
      }

      .modal-dialog {
        max-width: 32rem;
        margin: 5rem auto;
        transform: translateY(-50px);
        transition: transform 0.3s ease-out;
      }

      .modal.show .modal-dialog {
        transform: translateY(0);
      }

      .modal-content {
        background-color: #ffffff;
        border-radius: 0.75rem;
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
        overflow: hidden;
      }

      /* Responsive Adjustments */
      @media (max-width: 640px) {
        .table th,
        .table td {
          font-size: 0.75rem;
          padding: 0.75rem;
        }

        .btn,
        .filter-btn {
          font-size: 0.75rem;
          padding: 0.5rem 0.75rem;
        }

        .header-title {
          font-size: 1.5rem;
        }
      }
    </style>
  </head>
  <body>
    <!-- Main Content Area -->
    <div class="main-content">
      <!-- Header -->
      <div class="mb-8">
        <h2 class="header-title">
          <i class="fas fa-tag text-gray-600"></i> Coupon Management
        </h2>
      </div>

      <div class="card">
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
          <!-- Add Coupon Form -->
          <div class="col-span-1">
            <h5 class="text-lg font-semibold text-gray-800 mb-6">
              Add New Coupon
            </h5>
            <form id="addCouponForm">
              <div class="mb-5">
                <label class="form-label">Coupon Code</label>
                <input
                  type="text"
                  class="form-input"
                  name="name"
                  placeholder="Enter coupon code"
                  maxlength="50"
                  pattern="[A-Za-z0-9]+"
                />
                <small class="form-small">Alphanumeric, 3-50 characters</small>
              </div>
              <div class="mb-5">
                <label class="form-label">Discount Amount (₹)</label>
                <input
                  type="number"
                  class="form-input"
                  name="offerPrice"
                  placeholder="Discount amount"
                  min="1"
                  max="10000"
                />
              </div>
              <div class="mb-5">
                <label class="form-label">Minimum Purchase Amount (₹)</label>
                <input
                  type="number"
                  class="form-input"
                  name="minimumPrice"
                  placeholder="Min purchase amount"
                  min="1"
                  max="100000"
                />
              </div>
              <div class="mb-5">
                <label class="form-label">Expiry Date</label>
                <input
                  type="date"
                  class="form-input"
                  name="expireOn"
                  id="expiryDate"
                />
              </div>
              <div class="mb-5 flex items-center">
                <input
                  type="checkbox"
                  class="form-checkbox"
                  name="isList"
                  id="activeStatus"
                  checked
                />
                <label for="activeStatus" class="text-gray-700 ml-2"
                  >Active</label
                >
              </div>
              <button type="submit" class="btn btn-primary w-full">
                Create Coupon
              </button>
            </form>
          </div>

          <!-- Coupons List -->
          <div class="col-span-1 lg:col-span-2">
            <div
              class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4"
            >
              <h5 class="text-lg font-semibold text-gray-800">Coupon List</h5>
              <div class="flex flex-wrap gap-3">
                <button
                  class="filter-btn bg-gray-600 text-white hover:bg-gray-700 focus:ring-2 focus:ring-gray-500"
                  id="showAllBtn"
                >
                  All Coupons
                </button>
                <button
                  class="filter-btn bg-green-600 text-white hover:bg-green-700 focus:ring-2 focus:ring-green-500"
                  id="showActiveBtn"
                >
                  Active
                </button>
                <button
                  class="filter-btn bg-red-600 text-white hover:bg-red-700 focus:ring-2 focus:ring-red-500"
                  id="showExpiredBtn"
                >
                  Expired
                </button>
              </div>
            </div>

            <div class="table-container">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th>Coupon Code</th>
                    <th>Discount</th>
                    <th>Min. Purchase</th>
                    <th>Expiry Date</th>
                    <th>Status</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <% if (coupons && coupons.length > 0) { %> <%
                  coupons.forEach(coupon => { %> <% const expiryDate = new
                  Date(coupon.expireOn); %> <% const today = new Date(); %> <%
                  const isActive = expiryDate > today && coupon.isList === true;
                  %>
                  <tr
                    class="coupon-row <%= isActive ? 'active-coupon' : 'expired-coupon' %>"
                  >
                    <td>
                      <span class="font-semibold text-gray-800"
                        ><%= coupon.name %></span
                      >
                    </td>
                    <td>₹<%= coupon.offerPrice %></td>
                    <td>₹<%= coupon.minimumPrice %></td>
                    <td><%= expiryDate.toLocaleDateString() %></td>
                    <td>
                      <% if (isActive) { %>
                      <span class="badge bg-green-600 text-white">Active</span>
                      <% } else if (!coupon.isList) { %>
                      <span class="badge bg-gray-600 text-white">Inactive</span>
                      <% } else { %>
                      <span class="badge bg-red-600 text-white">Expired</span>
                      <% } %>
                    </td>
                    <td>
                      <div class="flex gap-2">
                        <button
                          class="btn btn-primary"
                          onclick="openEditModal('<%= coupon._id %>', '<%= coupon.name %>', 
                                                            '<%= coupon.offerPrice %>', '<%= coupon.minimumPrice %>', 
                                                            '<%= coupon.expireOn.toISOString().split('T')[0] %>', 
                                                            <%= coupon.isList %>)"
                          title="Edit"
                        >
                          <i class="fas fa-edit"></i>
                        </button>
                        <button
                          class="btn btn-danger"
                          onclick="deleteCoupon('<%= coupon._id %>')"
                          title="Delete"
                        >
                          <i class="fas fa-trash"></i>
                        </button>
                      </div>
                    </td>
                  </tr>
                  <% }); %> <% } else { %>
                  <tr>
                    <td colspan="6" class="py-8 text-center text-gray-600">
                      <div class="flex flex-col items-center">
                        <i class="fas fa-tag text-4xl text-gray-300 mb-2"></i>
                        <span>No coupons found</span>
                      </div>
                    </td>
                  </tr>
                  <% } %>
                </tbody>
              </table>
            </div>

            <!-- Pagination -->
            <% if (totalPages > 1) { %>
            <div class="mt-8">
              <nav aria-label="Page navigation">
                <ul class="flex justify-center space-x-2 flex-wrap">
                  <% if (currentPage > 1) { %>
                  <li>
                    <a
                      class="btn btn-neutral"
                      href="?page=<%= currentPage - 1 %>"
                      aria-label="Previous"
                    >
                      <span aria-hidden="true">«</span>
                    </a>
                  </li>
                  <% } %> <% for (let i = 1; i <= totalPages; i++) { %>
                  <li>
                    <a
                      class="btn <%= (i === Number(currentPage)) ? 'btn-primary' : 'btn-neutral' %>"
                      href="?page=<%= i %>"
                      ><%= i %></a
                    >
                  </li>
                  <% } %> <% if (currentPage < totalPages) { %>
                  <li>
                    <a
                      class="btn btn-neutral"
                      href="?page=<%= currentPage + 1 %>"
                      aria-label="Next"
                    >
                      <span aria-hidden="true">»</span>
                    </a>
                  </li>
                  <% } %>
                </ul>
              </nav>
            </div>
            <% } %>
          </div>
        </div>
      </div>
    </div>

    <!-- Edit Coupon Modal -->
    <div
      class="modal fade"
      id="editCouponModal"
      tabindex="-1"
      aria-labelledby="editCouponModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div
            class="p-6 border-b border-gray-200 flex justify-between items-center"
          >
            <h5
              class="text-lg font-semibold text-gray-800"
              id="editCouponModalLabel"
            >
              Edit Coupon
            </h5>
            <button
              type="button"
              class="text-gray-600 hover:text-gray-800 focus:ring-2 focus:ring-gray-500"
              data-bs-dismiss="modal"
              aria-label="Close"
            >
              <i class="fas fa-times"></i>
            </button>
          </div>
          <div class="p-6">
            <form id="editCouponForm">
              <input type="hidden" id="editCouponId" name="couponId" />
              <div class="mb-5">
                <label class="form-label">Coupon Code</label>
                <input
                  type="text"
                  class="form-input bg-gray-100"
                  id="editCouponName"
                  name="name"
                  readonly
                />
                <small class="form-small">Coupon codes cannot be changed</small>
              </div>
              <div class="mb-5">
                <label class="form-label">Discount Amount (₹)</label>
                <input
                  type="number"
                  class="form-input"
                  id="editOfferPrice"
                  name="offerPrice"
                  min="1"
                  max="10000"
                  required
                />
              </div>
              <div class="mb-5">
                <label class="form-label">Minimum Purchase Amount (₹)</label>
                <input
                  type="number"
                  class="form-input"
                  id="editMinimumPrice"
                  name="minimumPrice"
                  min="1"
                  max="100000"
                  required
                />
              </div>
              <div class="mb-5">
                <label class="form-label">Expiry Date</label>
                <input
                  type="date"
                  class="form-input"
                  id="editExpiryDate"
                  name="expireOn"
                  required
                />
              </div>
              <div class="mb-5 flex items-center">
                <input
                  class="form-checkbox"
                  type="checkbox"
                  id="editActiveStatus"
                  name="isList"
                />
                <label for="editActiveStatus" class="text-gray-700 ml-2"
                  >Active</label
                >
              </div>
            </form>
          </div>
          <div class="p-6 border-t border-gray-200 flex justify-end gap-3">
            <button
              type="button"
              class="btn btn-neutral"
              data-bs-dismiss="modal"
            >
              Cancel
            </button>
            <button
              type="button"
              class="btn btn-primary"
              onclick="updateCoupon()"
            >
              Save Changes
            </button>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const today = new Date();
        const tomorrow = new Date(today);
        tomorrow.setDate(tomorrow.getDate() + 1);
        const tomorrowFormatted = tomorrow.toISOString().split("T")[0];

        document.getElementById("expiryDate").min = tomorrowFormatted;
        document.getElementById("editExpiryDate").min = tomorrowFormatted;

        const addCouponForm = document.getElementById("addCouponForm");
        const nameInput = document.querySelector('input[name="name"]');
        const offerPriceInput = document.querySelector(
          'input[name="offerPrice"]'
        );
        const minimumPriceInput = document.querySelector(
          'input[name="minimumPrice"]'
        );

        nameInput.addEventListener("input", function () {
          this.value = this.value.replace(/[^a-zA-Z0-9]/g, "").toUpperCase();
          if (this.value.length > 50) {
            this.value = this.value.slice(0, 50);
          }
        });

        addCouponForm.addEventListener("submit", async function (event) {
          event.preventDefault();

          const name = nameInput.value.trim();
          if (!name || name.length < 3 || name.length > 50) {
            Swal.fire({
              title: "Error!",
              text: "Coupon code must be between 3 and 50 characters",
              icon: "error",
              confirmButtonColor: "#2563eb",
            });
            return;
          }

          const offerPrice = parseFloat(offerPriceInput.value);
          if (isNaN(offerPrice) || offerPrice <= 0 || offerPrice > 10000) {
            Swal.fire({
              title: "Error!",
              text: "Discount amount must be between ₹1 and ₹10,000",
              icon: "error",
              confirmButtonColor: "#2563eb",
            });
            return;
          }

          const minimumPrice = parseFloat(minimumPriceInput.value);
          if (
            isNaN(minimumPrice) ||
            minimumPrice <= 0 ||
            minimumPrice > 100000
          ) {
            Swal.fire({
              title: "Error!",
              text: "Minimum purchase amount must be between ₹1 and ₹100,000",
              icon: "error",
              confirmButtonColor: "#2563eb",
            });
            return;
          }

          if (offerPrice >= minimumPrice) {
            Swal.fire({
              title: "Error!",
              text: "Discount amount must be less than minimum purchase amount",
              icon: "error",
              confirmButtonColor: "#2563eb",
            });
            return;
          }

          const formData = new FormData(this);
          const couponData = {
            name: formData.get("name").toUpperCase(),
            offerPrice: parseFloat(formData.get("offerPrice")),
            minimumPrice: parseFloat(formData.get("minimumPrice")),
            expireOn: new Date(formData.get("expireOn")).toISOString(),
            isList: formData.get("isList") === "on" ? true : false,
          };

          try {
            const response = await fetch("/admin/coupon", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify(couponData),
            });

            const result = await response.json();

            if (result.status) {
              Swal.fire({
                title: "Success!",
                text: result.message || "Coupon created successfully",
                icon: "success",
                confirmButtonColor: "#2563eb",
              }).then(() => {
                window.location.reload();
              });
            } else {
              Swal.fire({
                title: "Error!",
                text: result.message || "Failed to create coupon",
                icon: "error",
                confirmButtonColor: "#2563eb",
              });
            }
          } catch (error) {
            console.error("Error:", error);
            Swal.fire({
              title: "Error!",
              text: "Something went wrong",
              icon: "error",
              confirmButtonColor: "#2563eb",
            });
          }
        });

        document
          .getElementById("showAllBtn")
          .addEventListener("click", function () {
            document.querySelectorAll(".coupon-row").forEach((row) => {
              row.style.display = "";
            });
            toggleActiveClass(this);
          });

        document
          .getElementById("showActiveBtn")
          .addEventListener("click", function () {
            document.querySelectorAll(".coupon-row").forEach((row) => {
              if (row.classList.contains("active-coupon")) {
                row.style.display = "";
              } else {
                row.style.display = "none";
              }
            });
            toggleActiveClass(this);
          });

        document
          .getElementById("showExpiredBtn")
          .addEventListener("click", function () {
            document.querySelectorAll(".coupon-row").forEach((row) => {
              if (row.classList.contains("expired-coupon")) {
                row.style.display = "";
              } else {
                row.style.display = "none";
              }
            });
            toggleActiveClass(this);
          });

        function toggleActiveClass(button) {
          const buttons = document.querySelectorAll(
            "#showAllBtn, #showActiveBtn, #showExpiredBtn"
          );
          buttons.forEach((btn) => {
            btn.classList.remove(
              "bg-gray-600",
              "bg-green-600",
              "bg-red-600",
              "bg-gray-200",
              "bg-green-200",
              "bg-red-200",
              "text-white",
              "text-gray-800"
            );
            if (btn.id === "showAllBtn") {
              btn.classList.add(
                btn === button
                  ? "bg-gray-600 text-white"
                  : "bg-gray-200 text-gray-800"
              );
              btn.classList.add(
                btn === button ? "hover:bg-gray-700" : "hover:bg-gray-300"
              );
            } else if (btn.id === "showActiveBtn") {
              btn.classList.add(
                btn === button
                  ? "bg-green-600 text-white"
                  : "bg-green-200 text-gray-800"
              );
              btn.classList.add(
                btn === button ? "hover:bg-green-700" : "hover:bg-green-300"
              );
            } else if (btn.id === "showExpiredBtn") {
              btn.classList.add(
                btn === button
                  ? "bg-red-600 text-white"
                  : "bg-red-200 text-gray-800"
              );
              btn.classList.add(
                btn === button ? "hover:bg-red-700" : "hover:bg-red-300"
              );
            }
          });
        }
      });

      function openEditModal(
        couponId,
        name,
        offerPrice,
        minimumPrice,
        expireOn,
        isActive
      ) {
        document.getElementById("editCouponId").value = couponId;
        document.getElementById("editCouponName").value = name;
        document.getElementById("editOfferPrice").value = offerPrice;
        document.getElementById("editMinimumPrice").value = minimumPrice;
        document.getElementById("editExpiryDate").value = new Date(expireOn)
          .toISOString()
          .split("T")[0];
        document.getElementById("editActiveStatus").checked = isActive;

        const editModal = document.getElementById("editCouponModal");
        editModal.classList.add("show");
        document.body.insertAdjacentHTML(
          "beforeend",
          '<div class="modal-backdrop"></div>'
        );
      }

      async function updateCoupon() {
        const couponId = document.getElementById("editCouponId").value;
        const offerPrice = parseFloat(
          document.getElementById("editOfferPrice").value
        );
        const minimumPrice = parseFloat(
          document.getElementById("editMinimumPrice").value
        );
        const expireOn = document.getElementById("editExpiryDate").value;
        const isActive = document.getElementById("editActiveStatus").checked;

        if (isNaN(offerPrice) || offerPrice <= 0 || offerPrice > 10000) {
          Swal.fire({
            title: "Error!",
            text: "Discount amount must be between ₹1 and ₹10,000",
            icon: "error",
            confirmButtonColor: "#2563eb",
          });
          return;
        }

        if (isNaN(minimumPrice) || minimumPrice <= 0 || minimumPrice > 100000) {
          Swal.fire({
            title: "Error!",
            text: "Minimum purchase amount must be between ₹1 and ₹100,000",
            icon: "error",
            confirmButtonColor: "#2563eb",
          });
          return;
        }

        if (offerPrice >= minimumPrice) {
          Swal.fire({
            title: "Error!",
            text: "Discount amount must be less than minimum purchase amount",
            icon: "error",
            confirmButtonColor: "#2563eb",
          });
          return;
        }

        const formData = {
          offerPrice,
          minimumPrice,
          expireOn: new Date(expireOn).toISOString(),
        
        };

        try {
          const response = await fetch(`/admin/coupon/${couponId}`, {
            method: "PUT",
            headers: { "Content-Type": "application/json" }, 
            body: JSON.stringify(formData),
          });

          const result = await response.json();

          if (result.status) {
            Swal.fire({
              title: "Success!",
              text: result.message || "Coupon updated successfully",
              icon: "success",
              confirmButtonColor: "#2563eb",
            }).then(() => window.location.reload());
          } else {
            Swal.fire({
              title: "Error!",
              text: result.message || "Failed to update coupon",
              icon: "error",
              confirmButtonColor: "#2563eb",
            });
          }
        } catch (error) {
          console.error("Error:", error);
          Swal.fire({
            title: "Error!",
            text: "Something went wrong",
            icon: "error",
            confirmButtonColor: "#2563eb",
          });
        }
      }

      async function deleteCoupon(couponId) {
        Swal.fire({
          title: "Are you sure?",
          text: "This coupon will be deleted permanently!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#2563eb",
          cancelButtonColor: "#6b7280",
          confirmButtonText: "Yes, delete it!",
        }).then(async (result) => {
          if (result.isConfirmed) {
            try {
              const response = await fetch(`/admin/coupon/${couponId}`, {
                method: "DELETE",
                headers: { "Content-Type": "application/json" },
              });

              const result = await response.json();

              if (result.status) {
                Swal.fire({
                  title: "Deleted!",
                  text: "Coupon has been deleted successfully.",
                  icon: "success",
                  confirmButtonColor: "#2563eb",
                }).then(() => {
                  window.location.reload();
                });
              } else {
                Swal.fire({
                  title: "Error!",
                  text: result.message || "Failed to delete coupon",
                  icon: "error",
                  confirmButtonColor: "#2563eb",
                });
              }
            } catch (error) {
              console.error("Error:", error);
              Swal.fire({
                title: "Error!",
                text: "Something went wrong",
                icon: "error",
                confirmButtonColor: "#2563eb",
              });
            }
          }
        });
      }

      document
        .querySelectorAll('[data-bs-dismiss="modal"]')
        .forEach((button) => {
          button.addEventListener("click", () => {
            const modal = document.getElementById("editCouponModal");
            modal.classList.remove("show");
            document.querySelector(".modal-backdrop")?.remove();
          });
        });
    </script>
  </body>
</html>
