<%- include("../../views/partials/admin/header") %>

<!-- Ensure SweetAlert2 is included -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div class="container">
    <div class="header">
        <div class="title">Edit Category</div>
        <a href="/admin/category" class="back-button">Back to Categories</a>
    </div>

    <div class="form-container">
        <form id="edit-category-form" action="/admin/editCategory/<%= category._id %>" method="POST">
            <div class="form-group">
                <label for="categoryName">Category Name</label>
                <input type="text" id="categoryName" name="categoryName" value="<%= category.name %>" maxlength="50">
                <div id="name-error" class="error-message"></div>
            </div>
            <div class="form-group">
                <label for="description">Description</label>
                <textarea id="description" name="description" rows="5" maxlength="500"><%= category.description %></textarea>
                <div id="description-error" class="error-message"></div>
            </div>
            <div class="form-actions">
                <a href="/admin/category" class="btn btn-secondary">Cancel</a>
                <button type="submit" class="btn btn-primary" id="update-category-btn">Update Category</button>
            </div>
        </form>
    </div>
</div>

<style>
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 20px;
    }
    .container {
        max-width: 800px;
        margin: 0 auto;
    }
    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 20px;
        background-color: #f5f5f5;
        border-radius: 5px;
        margin-bottom: 20px;
    }
    .title {
        font-size: 24px;
        font-weight: bold;
        color: #333;
    }
    .back-button {
        background-color: #6c757d;
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 4px;
        cursor: pointer;
        font-weight: bold;
        text-decoration: none;
    }
    .back-button:hover {
        background-color: #5a6268;
    }
    .form-container {
        background-color: #f9f9f9;
        padding: 20px;
        border-radius: 5px;
    }
    .form-group {
        margin-bottom: 20px;
    }
    .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: 500;
    }
    .form-group input, .form-group textarea {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        box-sizing: border-box;
    }
    .form-group textarea {
        resize: vertical;
    }
    .form-actions {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
    }
    .btn {
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-weight: 500;
        text-decoration: none;
        display: inline-block;
    }
    .btn-primary {
        background-color: #007bff;
        color: white;
    }
    .btn-primary:disabled {
        background-color: #6c757d;
        cursor: not-allowed;
    }
    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }
    .error-message {
        color: #dc3545;
        font-size: 12px;
        margin-top: 5px;
        display: none;
    }
    .error {
        border-color: #dc3545 !important;
    }
</style>

<script>
    const editCategoryForm = document.getElementById('edit-category-form');
    const categoryNameInput = document.getElementById('categoryName');
    const descriptionInput = document.getElementById('description');
    const updateCategoryBtn = document.getElementById('update-category-btn');

    function clearErrorMessages() {
        const errorElements = document.querySelectorAll('.error-message');
        errorElements.forEach(element => {
            element.innerHTML = '';
            element.style.display = 'none';
        });
        const inputElements = document.querySelectorAll('#categoryName, #description');
        inputElements.forEach(element => {
            element.classList.remove('error');
        });
    }

    function showError(elementId, message) {
        const errorElement = document.getElementById(elementId);
        errorElement.innerHTML = message;
        errorElement.style.display = 'block';
        const inputElement = document.getElementById(elementId.replace('-error', ''));
        inputElement.classList.add('error');
    }

    editCategoryForm.addEventListener('submit', async (event) => {
        event.preventDefault();
        clearErrorMessages();
        updateCategoryBtn.disabled = true;

        if (typeof Swal === 'undefined') {
            console.error('SweetAlert2 is not loaded');
            alert('SweetAlert2 is not loaded. Please contact support.');
            updateCategoryBtn.disabled = false;
            return;
        }

        const name = categoryNameInput.value.trim();
        const description = descriptionInput.value.trim();

        if (!name) {
            showError('name-error', 'Category name is required');
            Swal.fire({
                icon: 'warning',
                title: 'Missing Field',
                text: 'Category name is required'
            });
            updateCategoryBtn.disabled = false;
            return;
        }

        if (name.length < 2 || name.length > 50) {
            showError('name-error', 'Category name must be between 2 and 50 characters');
            Swal.fire({
                icon: 'warning',
                title: 'Invalid Input',
                text: 'Category name must be between 2 and 50 characters'
            });
            updateCategoryBtn.disabled = false;
            return;
        }

        const nameRegex = /^[a-zA-Z0-9\s\-'&]+$/;
        if (!nameRegex.test(name)) {
            showError('name-error', 'Category name can only contain letters, numbers, spaces, hyphens, and ampersands');
            Swal.fire({
                icon: 'warning',
                title: 'Invalid Input',
                text: 'Category name can only contain letters, numbers, spaces, hyphens, and ampersands'
            });
            updateCategoryBtn.disabled = false;
            return;
        }

        if (!description) {
            showError('description-error', 'Description is required');
            Swal.fire({
                icon: 'warning',
                title: 'Missing Field',
                text: 'Description is required'
            });
            updateCategoryBtn.disabled = false;
            return;
        }

        if (description.length < 10 || description.length > 500) {
            showError('description-error', 'Description must be between 10 and 500 characters');
            Swal.fire({
                icon: 'warning',
                title: 'Invalid Input',
                text: 'Description must be between 10 and 500 characters'
            });
            updateCategoryBtn.disabled = false;
            return;
        }

        const descriptionRegex = /^[a-zA-Z0-9\s.,!?'"\-()]+$/;
        if (!descriptionRegex.test(description)) {
            showError('description-error', 'Description contains invalid characters');
            Swal.fire({
                icon: 'warning',
                title: 'Invalid Input',
                text: 'Description contains invalid characters'
            });
            updateCategoryBtn.disabled = false;
            return;
        }

        try {
            Swal.fire({
                title: 'Updating...',
                text: 'Please wait while the category is being updated.',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            console.log('Sending request to /admin/editCategory/<%= category._id %> with:', { name, description });
            const response = await fetch('/admin/editCategory/<%= category._id %>', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ categoryName: name, description })
            });

            const data = await response.json().catch(() => ({}));
            console.log('Server response:', data);

            if (!response.ok) {
                Swal.close();
                if (data.error && /already exists/i.test(data.error)) {
                    showError('name-error', 'A category with this name already exists');
                    Swal.fire({
                        icon: 'error',
                        title: 'Duplicate Category',
                        text: 'A category with this name already exists'
                    });
                    return;
                }
                throw new Error(data.error || 'Failed to update category');
            }

            Swal.fire({
                icon: 'success',
                title: 'Category Updated',
                text: 'The category was updated successfully!',
                timer: 1500,
                showConfirmButton: false
            }).then(() => {
                window.location.href = '/admin/category';
            });
        } catch (error) {
            console.error('Error updating category:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'An error occurred while updating the category'
            });
        } finally {
            updateCategoryBtn.disabled = false;
        }
    });
</script>

<%- include("../../views/partials/admin/footer") %>