
<%- include("../../views/partials/user/header") %>

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Arial', sans-serif;
    }
    
    body {
        color: #333;
        background-color: #f9f9f9;
    }
    
    .header {
        background-color: white;
        padding: 20px 50px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }
    
    .zoomImg {
        cursor: zoom-out; 
        background-color: white; 
    }

    .thumbnail {
        width: 100px;
        height: 100px;
        border: 1px solid #ddd;
        cursor: pointer;
        overflow: hidden;
        transition: border-color 0.3s, transform 0.2s;
    }

    .thumbnail:hover {
        border-color: #9370DB;
        transform: translateY(-2px);
    }

    .thumbnail.active {
        border: 2px solid #9370DB;
    }
    
    .logo {
        font-size: 28px;
        font-weight: bold;
        color: #333;
        text-decoration: none;
    }
    
    .logo span {
        color: #9370DB;
        font-weight: lighter;
    }
    
    .nav {
        display: flex;
        gap: 30px;
    }
    
    .nav a {
        text-decoration: none;
        color: #333;
        font-weight: 500;
        padding: 5px 0;
        position: relative;
    }
    
    .nav a.active::after,
    .nav a:hover::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 2px;
        background-color: #9370DB;
    }
    
    .nav a.active {
        color: #9370DB;
    }
    
    .user-actions {
        display: flex;
        gap: 20px;
        align-items: center;
    }
    
    .search-icon, .user-icon, .cart-icon {
        font-size: 20px;
        cursor: pointer;
    }
    
    .promo-bar {
        background-color: #c6d2d8;
        padding: 10px 0;
        display: flex;
        justify-content: space-around;
    }
    
    .promo-item {
        display: flex;
        align-items: center;
        gap: 10px;
        font-size: 14px;
    }
    
    .breadcrumbs {
        max-width: 1200px;
        margin: 20px auto;
        padding: 0 20px;
        font-size: 14px;
        color: #666;
    }
    
    .breadcrumbs a {
        color: #333;
        text-decoration: none;
        transition: color 0.3s;
    }
    
    .breadcrumbs a:hover {
        color: #9370DB;
    }
    
    .breadcrumbs span {
        margin: 0 8px;
    }
    
    .breadcrumbs .current {
        color: #333;
        font-weight: 500;
    }
    
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 40px 20px;
    }
    
    .product-details {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 50px;
    }
    
    .product-gallery {
        display: grid;
        grid-template-columns: 100px 1fr;
        gap: 20px;
    }
    
    .thumbnails {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }
    
    .thumbnail {
        width: 100px;
        height: 100px;
        border: 1px solid #ddd;
        cursor: pointer;
        overflow: hidden;
    }
    
    .thumbnail img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s;
    }
    
    .thumbnail:hover img {
        transform: scale(1.05);
    }
    
    .thumbnail.active {
        border: 2px solid #9370DB;
    }
    
    .main-image {
        width: 100%;
        height: 500px;
        overflow: hidden;
        position: relative;
    }
    
    .main-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    
    .product-info {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }
    
    .product-title {
        font-size: 32px;
        font-weight: bold;
        color: #333;
    }
    
    .product-category {
        color: #777;
        font-size: 14px;
    }
    
    .product-price {
        font-size: 24px;
        font-weight: bold;
        color: #9370DB;
    }
    
    .product-discount {
        font-size: 16px;
        color: #e74c3c;
        text-decoration: line-through;
        margin-left: 10px;
    }
    
    .product-rating {
        display: flex;
        align-items: center;
        gap: 5px;
    }
    
    .stars {
        color: #f1c40f;
        font-size: 18px;
    }
    
    .review-count {
        color: #777;
        font-size: 14px;
    }
    
    .product-description {
        line-height: 1.6;
        color: #555;
    }
    
    .product-actions {
        display: flex;
        flex-direction: column;
        gap: 20px;
        margin-top: 20px;
    }
    
    .quantity-selector {
        display: flex;
        align-items: center;
        gap: 10px;
    }
    
    .quantity-btn {
        width: 40px;
        height: 40px;
        background-color: #f1f1f1;
        border: none;
        font-size: 20px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .quantity-input {
        width: 60px;
        height: 40px;
        border: 1px solid #ddd;
        text-align: center;
        font-size: 16px;
    }
    
    .add-to-cart, .buy-now {
        padding: 15px 30px;
        border: none;
        font-size: 16px;
        font-weight: bold;
        cursor: pointer;
        transition: background-color 0.3s;
    }
    
    .add-to-cart {
        background-color: #9370DB;
        color: white;
    }
    
    .add-to-cart:hover {
        background-color: #8a5cdb;
    }
    
    .buy-now {
        background-color: #333;
        color: white;
    }
    
    .buy-now:hover {
        background-color: #222;
    }
    
    .product-details-tabs {
        margin-top: 60px;
    }
    
    .tabs-nav {
        display: flex;
        border-bottom: 1px solid #ddd;
    }
    
    .tab-item {
        padding: 15px 30px;
        cursor: pointer;
        font-weight: 500;
    }
    
    .tab-item.active {
        color: #9370DB;
        border-bottom: 3px solid #9370DB;
    }
    
    .tab-content {
        padding: 30px 0;
        line-height: 1.6;
    }
    
    .specifications {
        display: grid;
        grid-template-columns: 200px 1fr;
        gap: 10px 30px;
    }
    
    .spec-label {
        font-weight: bold;
        color: #555;
    }
    
    .related-products {
        margin-top: 60px;
    }
    
    .section-title {
        font-size: 24px;
        margin-bottom: 30px;
        position: relative;
        padding-bottom: 10px;
    }
    
    .section-title::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 60px;
        height: 3px;
        background-color: #9370DB;
    }
    
    .products-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 30px;
    }
    
    .product-card {
        background-color: white;
        box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        overflow: hidden;
        transition: transform 0.3s, box-shadow 0.3s;
        border-radius: 8px;
        cursor: pointer;
        position: relative;
    }
    
    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.1);
    }
    
    .product-card-img {
        width: 100%;
        height: 200px;
        overflow: hidden;
        position: relative;
    }
    
    .product-card-img img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s;
    }
    
    .product-card:hover .product-card-img img {
        transform: scale(1.05);
    }
    
    .product-card-info {
        padding: 20px;
    }
    
    .product-card-title {
        font-size: 16px;
        font-weight: 500;
        margin-bottom: 10px;
    }
    
    .product-card-price {
        font-size: 18px;
        font-weight: bold;
        color: #9370DB;
    }
    
    .footer {
        background-color: #333;
        color: white;
        padding: 50px 0 20px;
    }
    
    .footer-content {
        max-width: 1200px;
        margin: 0 auto;
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 30px;
        padding: 0 20px;
    }
    
    .footer-column h3 {
        font-size: 18px;
        margin-bottom: 20px;
        position: relative;
        padding-bottom: 10px;
    }
    
    .footer-column h3::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 40px;
        height: 2px;
        background-color: #9370DB;
    }
    
    .footer-links {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }
    
    .footer-links a {
        color: #bbb;
        text-decoration: none;
        transition: color 0.3s;
    }
    
    .footer-links a:hover {
        color: white;
    }
    
    .footer-bottom {
        max-width: 1200px;
        margin: 50px auto 0;
        padding: 20px;
        border-top: 1px solid #444;
        text-align: center;
        color: #888;
        font-size: 14px;
    }
    
    .wishlist-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        background: rgba(255, 255, 255, 0.8);
        border: none;
        border-radius: 50%;
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.2s ease;
        z-index: 2;
    }
    
    .wishlist-btn:hover {
        background: #fff;
        transform: scale(1.1);
    }
    
    .wishlist-btn i {
        color: #ff5757;
        font-size: 18px;
    }
    
    .wishlist-btn.added i {
        color: #ff0000; /* Brighter red for active state */
    }
    
    .product-badge {
        position: absolute;
        top: 10px;
        left: 10px;
        background: #ff5757;
        color: white;
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 12px;
        font-weight: bold;
    }
    
    .product-info {
        padding: 15px;
    }
    
    .product-category {
        color: #888;
        font-size: 14px;
        margin-bottom: 5px;
    }
    
    .product-name {
        margin: 0 0 10px;
        font-size: 16px;
        font-weight: 500;
        color: #333;
    }
    
    .offer-details {
        margin: 10px 0;
        font-size: 16px;
        font-weight: 500;
        color: #e74c3c; /* Red color for offer text */
    }
    
    .offer-type {
        background-color: #ffe6e6; /* Light red background */
        padding: 5px 10px;
        border-radius: 4px;
        display: inline-block;
    }
    
    .price {
        font-weight: 600;
        font-size: 18px;
        color: #333;
    }
</style>

<body>
    <!-- Breadcrumbs -->
    <nav class="breadcrumbs">
        <a href="/">Home</a>
        <span>></span>
        <a href="/shop">Shop</a>
        <% if (product && product.category && product.category._id) { %>
            <span>></span>
            <a href="/shop?category=<%= encodeURIComponent(product.category._id) %>">
                <%= product.category.name || 'Category' %>
            </a>
        <% } %>
        <span>></span>
        <span class="current">
            <%= product && product.productName ? product.productName : 'Product' %>
        </span>
    </nav>

    <div class="container">
        <!-- Product Details -->
        <div class="product-details">
            <div class="product-gallery">
                <div class="thumbnails">
                    <% if (product && product.productImage && Array.isArray(product.productImage) && product.productImage.length > 1) { %>
                        <% product.productImage.forEach((image, index) => { %>
                            <div class="thumbnail">
                                <img 
                                    src="<%= image || '/api/placeholder/100/100' %>" 
                                    alt="<%= product.productName ? `${product.productName} - View ${index + 1}` : 'No additional views' %>" 
                                    class="thumbnail-image"
                                    data-src="<%= image || '/api/placeholder/500/500' %>"
                                >
                            </div>
                        <% }) %>
                    <% } else { %>
                        <div class="thumbnail">
                            <img src="/api/placeholder/100/100" alt="No additional views">
                        </div>
                    <% } %>
                </div>
                
                <div class="main-image">
                    <% if (product && product.productImage && Array.isArray(product.productImage) && product.productImage.length > 0) { %>
                        <button class="wishlist-btn <%= product.inWishlist ? 'added' : '' %>" onclick="addToWishlist('<%= product._id %>', event)">
                            <i class="fa fa-heart<%= product.inWishlist ? '' : '-o' %>"></i>
                        </button>
                        <img 
                            id="mainProductImage"  
                            class="product-image-zoom"
                            src="<%= product.productImage[0] || '/api/placeholder/500/500' %>" 
                            alt="<%= product.productName || 'No main image' %>"
                        >                      
                    <% } else { %>
                        <img id="mainProductImage" src="/api/placeholder/500/500" alt="No main image">
                    <% } %>
                </div>
            </div>
            
            <div class="product-info">
                <div>
                    <span class="product-category">
                        <% if (product && product.category && product.category.name) { %>
                            <%= product.category.name %>
                        <% } else { %>
                            Unknown Category
                        <% } %>
                    </span>
                    <h1 class="product-title"><%= product && product.productName ? product.productName : 'Unnamed Product' %></h1>
                </div>

                <!-- Offer Details -->
                <div class="offer-details">
                    <% if (product && (product.productOffer || product.categoryOffer)) { %>
                        <% 
                            const bestDiscount = Math.max(product.productOffer || 0, product.categoryOffer || 0);
                            const offerType = product.productOffer >= product.categoryOffer ? 'Product Offer' : 'Category Offer';
                        %>
                        <span class="offer-type">
                            <%= offerType %>: <%= bestDiscount %>% Off
                        </span>
                    <% } else { %>
                        <span class="offer-type">No Offer Applied</span>
                    <% } %>
                </div>
                
                <div>
                    <span class="product-price">
                        <% if (product && product.salesPrice !== undefined && product.salesPrice !== null) { %>
                            ₹<%= product.salesPrice.toFixed(2) %>
                            <span class="product-discount">
                                <del>₹<%= product.regularPrice.toFixed(2) %></del>
                            </span>
                        <% } else if (product && product.regularPrice !== undefined) { %>
                            ₹<%= product.regularPrice.toFixed(2) %>
                        <% } else { %>
                            Not Available
                        <% } %>
                    </span>
                </div>
                
                <p class="product-description">
                    <%= product && product.description ? product.description : 'No description available.' %>
                </p>
                <p class="product-description">
                    Stock: <%= product && product.quantity ? product.quantity : 'Out of Stock' %>
                </p>
                
                <div class="product-actions">
                    <div class="quantity-selector flex items-center space-x-2">
                        <button class="quantity-btn bg-gray-300 text-gray-700 px-3 py-1 rounded hover:bg-gray-400 transition">-</button>
                        <input type="number" min="1" value="1" class="quantity-input w-16 text-center border border-gray-300 rounded px-2 py-1 focus:outline-none focus:ring-2 focus:ring-gray-500">
                        <button class="quantity-btn bg-gray-300 text-gray-700 px-3 py-1 rounded hover:bg-gray-400 transition">+</button>
                    </div>
                    
                    <p class="mt-3">
                        <button 
                            class="buy-now btn btn-sm height-auto px-4 py-3 btn-primary bg-gray-700 text-white rounded-lg hover:bg-gray-800 transition" 
                            onclick="handleAddToCartWithValidation('<%= product._id %>')"
                        >
                            Add To Cart
                        </button>
                    </p>
                </div>
            </div>
        </div>
        
        <div class="product-details-tabs">
            <div class="tabs-nav">
                <div class="tab-item active">Description</div>
                <div class="tab-item">Specifications</div>
            
            </div>
            
            <div class="tab-content">
                <!-- Description Tab -->
                <div class="tab-pane active">
                    <p><%= product && product.description ? product.description : 'No description available.' %></p>
                </div>
                
                <!-- Specifications Tab -->
                <div class="tab-pane">
                    <div class="specifications">
                        <div class="spec-label">Status</div>
                        <div><%= product && product.status ? product.status : 'Unknown' %></div>
                        
                        <div class="spec-label">Total Stock</div>
                        <div><%= product && product.quantity !== undefined ? product.quantity : 0 %></div>
                        
                        <div class="spec-label">Regular Price</div>
                        <div>
                            <% if (product && product.regularPrice !== undefined && product.regularPrice !== null) { %>
                                ₹<%= Number(product.regularPrice).toFixed(2) %>
                            <% } else { %>
                                Not Available
                            <% } %>
                        </div>
                        
                        <div class="spec-label">Sale Price</div>
                        <div>
                            <% if (product && product.salesPrice !== undefined && product.salesPrice !== null) { %>
                                ₹<%= Number(product.salesPrice).toFixed(2) %>
                            <% } else { %>
                                Not Available
                            <% } %>
                        </div>
                        
                        <div class="spec-label">Product Offer</div>
                        <div>
                            <% if (product && product.productOffer !== undefined && product.productOffer !== null) { %>
                                <%= product.productOffer %>%
                            <% } else { %>
                                No Offer
                            <% } %>
                        </div>
                        
                      
                        
                        
                    
                  
                        
                        
                    </div>
                </div>
                
               
              
            </div>
        </div>
        
        <!-- Related Products -->
        <div class="related-products">
            <h2 class="section-title">You May Also Like</h2>
            
            <div class="products-grid">
                <% if (relatedProducts && Array.isArray(relatedProducts) && relatedProducts.length > 0) { %>
                    <% relatedProducts.forEach(relatedProduct => { %>
                        <div class="product-card">
                            <div class="product-card-img">
                                <button class="wishlist-btn <%= relatedProduct.inWishlist ? 'added' : '' %>" onclick="addToWishlist('<%= relatedProduct._id %>', event)">
                                    <i class="fa fa-heart<%= relatedProduct.inWishlist ? '' : '-o' %>"></i>
                                </button>
                                <% if (relatedProduct && relatedProduct.productImage && Array.isArray(relatedProduct.productImage) && relatedProduct.productImage.length > 0) { %>
                                    <img src="<%= relatedProduct.productImage[0] || '/api/placeholder/300/300' %>" alt="<%= relatedProduct.productName || 'No image' %>">
                                <% } else { %>
                                    <img src="/api/placeholder/300/300" alt="No image">
                                <% } %>
                            </div>
                            <div class="product-card-info">
                                <h3 class="product-card-title"><%= relatedProduct && relatedProduct.productName ? relatedProduct.productName : 'Unnamed Product' %></h3>
                                <div class="product-card-price">
                                    <% if (relatedProduct && relatedProduct.salesPrice !== undefined && relatedProduct.salesPrice !== null) { %>
                                        ₹<%= Number(relatedProduct.salesPrice).toFixed(2) %>
                                    <% } else if (relatedProduct && relatedProduct.regularPrice !== undefined) { %>
                                        ₹<%= Number(relatedProduct.regularPrice).toFixed(2) %>
                                    <% } else { %>
                                        Not Available
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                <% } else { %>
                    <p>No related products available.</p>
                <% } %>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-zoom/1.7.21/jquery.zoom.min.js"></script>

    <script>
        const tabs = document.querySelectorAll('.tab-item');
        const tabPanes = document.querySelectorAll('.tab-pane');

        tabs.forEach((tab, index) => {
            tab.addEventListener('click', () => {
                tabs.forEach(t => t.classList.remove('active'));
                tabPanes.forEach(p => p.classList.remove('active'));

                tab.classList.add('active');
                tabPanes[index].classList.add('active');
            });
        });

        const quantityInput = document.querySelector('.quantity-input');
        const quantityButtons = document.querySelectorAll('.quantity-btn');

        quantityButtons.forEach(button => {
            button.addEventListener('click', () => {
                let currentValue = parseInt(quantityInput.value);
                if (button.textContent === '-') {
                    if (currentValue > 1) quantityInput.value = currentValue - 1;
                } else {
                    quantityInput.value = currentValue + 1;
                }
            });
        });

        document.addEventListener("DOMContentLoaded", () => {
            const thumbnails = document.querySelectorAll('.thumbnail-image');
            const mainImage = document.getElementById('mainProductImage');
            const mainImageContainer = document.querySelector('.main-image');

            thumbnails.forEach(thumbnail => {
                thumbnail.addEventListener('click', () => {
                    thumbnails.forEach(t => t.parentElement.classList.remove('active'));
                    thumbnail.parentElement.classList.add('active');
                    const newSrc = thumbnail.getAttribute('data-src');
                    if (mainImage && newSrc) {
                        mainImage.src = newSrc;
                        $(mainImageContainer).trigger('zoom.destroy');
                        $(mainImageContainer).zoom({
                            url: newSrc,
                            magnify: 1.5
                        });
                    }
                });
            });

            $('.main-image').zoom({
                url: document.getElementById('mainProductImage').src,
                magnify: 1.5 
            });
        });

        document.querySelectorAll('.quantity-btn').forEach(button => {
            button.addEventListener('click', function() {
                const input = this.parentElement.querySelector('.quantity-input');
                let quantity = parseInt(input.value) || 1;
                const maxQuantity = 5;

                if (this.textContent === '+') {
                    if (quantity >= maxQuantity) {
                        Swal.fire({
                            title: 'Quantity Limit Reached',
                            text: `You can only add up to ${maxQuantity} items.`,
                            icon: 'warning',
                            confirmButtonColor: '#4b5563'
                        });
                        return;
                    }
                    quantity++;
                } else if (this.textContent === '-') {
                    if (quantity <= 1) {
                        Swal.fire({
                            title: 'Invalid Quantity',
                            text: 'Quantity cannot be less than 1.',
                            icon: 'warning',
                            confirmButtonColor: '#4b5563'
                        });
                        return;
                    }
                    quantity--;
                }

                input.value = quantity;
            });
        });

        document.querySelectorAll('.quantity-input').forEach(input => {
            input.addEventListener('input', function() {
                const maxQuantity = 5;
                let quantity = parseInt(this.value) || 1;

                if (quantity < 1) {
                    Swal.fire({
                        title: 'Invalid Quantity',
                        text: 'Quantity must be at least 1.',
                        icon: 'warning',
                        confirmButtonColor: '#4b5563'
                    });
                    this.value = 1;
                } else if (quantity > maxQuantity) {
                    Swal.fire({
                        title: 'Quantity Limit Reached',
                        text: `You can only add up to ${maxQuantity} items.`,
                        icon: 'warning',
                        confirmButtonColor: '#4b5563'
                    });
                    this.value = maxQuantity;
                }
            });
        });

        async function handleAddToCartWithValidation(productId) {
            if (!productId) {
                Swal.fire({
                    title: 'Error',
                    text: 'Invalid product ID.',
                    icon: 'error',
                    confirmButtonColor: '#4b5563'
                });
                return;
            }

            const quantityInput = document.querySelector('.quantity-input');
            const quantity = parseInt(quantityInput.value) || 1;
            const maxQuantity = 5;

            if (quantity < 1) {
                Swal.fire({
                    title: 'Invalid Quantity',
                    text: 'Quantity must be at least 1.',
                    icon: 'warning',
                    confirmButtonColor: '#4b5563'
                });
                quantityInput.value = 1;
                return;
            }

            if (quantity > maxQuantity) {
                Swal.fire({
                    title: 'Quantity Limit Reached',
                    text: `You can only add up to ${maxQuantity} items.`,
                    icon: 'warning',
                    confirmButtonColor: '#4b5563'
                });
                quantityInput.value = maxQuantity;
                return;
            }

            const result = await Swal.fire({
                title: 'Add to Cart',
                text: `Are you sure you want to add ${quantity} item${quantity > 1 ? 's' : ''} to your cart?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#4b5563',
                cancelButtonColor: '#dc2626',
                confirmButtonText: 'Yes, add it!',
                cancelButtonText: 'Cancel'
            });

            if (result.isConfirmed) {
                try {
                    const response = await fetch('/add-to-cart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            productId: productId,
                            quantity: quantity
                        })
                    });

                    const data = await response.json();

                    if (response.ok) {
                        await Swal.fire({
                            title: 'Success!',
                            text: 'Product added to cart successfully.',
                            icon: 'success',
                            confirmButtonColor: '#4b5563',
                            timer: 2000,
                            showConfirmButton: false
                        });
                    } else {
                        throw new Error(data.message || 'Failed to add to cart');
                    }
                } catch (error) {
                    console.error('Error adding to cart:', error);
                    Swal.fire({
                        title: 'Error',
                        text: error.message || 'Failed to add to cart. Please try again.',
                        icon: 'error',
                        confirmButtonColor: '#4b5563'
                    });
                }
            }
        }

        function showToast(message, type) {
            Swal.fire({
                toast: true,
                position: 'top-end',
                icon: type,
                title: message,
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer);
                    toast.addEventListener('mouseleave', Swal.resumeTimer);
                }
            });
        }

        async function addToWishlist(productId, event) {
            event.preventDefault();
            const button = event.target.closest('.wishlist-btn');
            const isAdded = button.classList.contains('added');

            try {
                const response = await fetch(isAdded ? '/removeWishlist' : '/addWishlist', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productId })
                });

                const data = await response.json();

                if (data.success) {
                    if (isAdded) {
                        button.classList.remove('added');
                        button.querySelector('i').classList.replace('fa-heart', 'fa-heart-o');
                        showToast('Product removed from wishlist!', 'success');
                    } else {
                        button.classList.add('added');
                        button.querySelector('i').classList.replace('fa-heart-o', 'fa-heart');
                        showToast('Product added to wishlist!', 'success');
                    }
                } else {
                    showToast(data.message || 'Failed to update wishlist', 'error');
                }
            } catch (error) {
                console.error('Error:', error);
                showToast('Something went wrong. Please try again.', 'error');
            }
        }
    </script>

    <%- include("../../views/partials/user/footer") %>
</body>
</html>
