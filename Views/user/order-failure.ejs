<%- include("partials/user/header") %>

<div class="container mt-5 text-center">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <!-- Illustration -->
            <img src="/images/payment-failed-illustration.png" alt="Payment Failed" class="img-fluid mb-4" style="max-width: 300px;">
            
            <!-- Statement -->
            <h2 class="text-danger mb-3">Payment Failed</h2>
            <p class="text-muted mb-4">We couldn't process your payment. Please try again or check your order details.</p>

            <!-- Buttons -->
            <div class="d-flex justify-content-center gap-3">
                <button class="btn btn-primary" onclick="retryPayment('<%= orderId %>', <%= amount %>, '<%= selectedAddress %>')">Retry Payment</button>
                <button class="btn btn-outline-secondary" onclick="viewOrderDetails('<%= orderId %>')">View Order Details</button>
            </div>
        </div>
    </div>
</div>

<script>
    async function retryPayment(orderId, amount, selectedAddress) {
        try {
            const response = await fetch('/process-checkout', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ selectedAddress, paymentMethod: 'razorpay', amount })
            });
            const data = await response.json();

            if (data.success) {
                const options = {
                    key: '<%= razorpayKey %>', 
                    amount: amount * 100,
                    currency: 'INR',
                    name: 'satchel',
                    description: 'Order Payment',
                    order_id: data.razorpayOrderId,
                    handler: async function (response) {
                        const result = await fetch('/verify-payment', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ response, selectedAddress, amount, orderId })
                        });
                        const verifyData = await result.json();
                        if (verifyData.success) {
                            window.location.href = '/thankyou?orderId=' + orderId;
                        } else {
                            window.location.href = '/order-failure?orderId=' + orderId + '&amount=' + amount + '&selectedAddress=' + selectedAddress;
                        }
                    },
                    prefill: {
                        name: '<%= user.name %>',
                        email: '<%= user.email %>',
                        contact: '<%= user.phone %>' || '9999999999'
                    },
                    theme: { color: '#7971ea' },
                    modal: {
                        ondismiss: function () {
                            window.location.href = '/order-failure?orderId=' + orderId + '&amount=' + amount + '&selectedAddress=' + selectedAddress;
                        }
                    }
                };
                const rzp = new Razorpay(options);
                rzp.open();
            } else {
                alert(data.message);
            }
        } catch (error) {
            console.error('Retry payment error:', error);
            alert('An error occurred while retrying the payment.');
        }
    }

    function viewOrderDetails(orderId) {
        window.location.href = '/profile?openOrder=' + orderId;
    }
</script>

<%- include("partials/user/footer") %>