<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Signup - Satchel</title>
  <link rel="stylesheet" href="/signup.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <style>
    body {
      margin: 0;
      padding: 0;
      font-family: 'Poppins', sans-serif;
      background-color: #f6f1eb;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }
    .container {
      display: flex;
      background-color: #ffffff;
      border-radius: 16px;
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
      overflow: hidden;
      max-width: 700px;
      width: 100%;
    }
    .image-section {
      background-color: #d2b48c;
      flex: 1;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 1rem;
    }
    .image-section img {
      width: 90%;
      max-width: 250px;
      border-radius: 12px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
    }
    .form-section {
      flex: 1;
      padding: 2rem;
      background-color: #fff;
      display: flex;
      flex-direction: column;
      justify-content: center;
      text-align: center;
    }
    .form-section h2 {
      color: #5c4033;
      margin-bottom: 1rem;
    }
    .google-btn {
      background-color: white;
      border: 1px solid #ccc;
      border-radius: 8px;
      padding: 10px;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 10px;
      cursor: pointer;
      margin-bottom: 1rem;
      font-weight: 500;
    }
    .google-btn img {
      width: 20px;
      height: 20px;
    }
    .divider {
      margin: 1rem 0;
      color: #999;
      font-size: 14px;
    }
    .form-section input {
      width: 100%;
      padding: 10px;
      margin: 8px 0;
      border: 1px solid #d0b49f;
      border-radius: 8px;
    }
    .form-section button[type="submit"] {
      width: 100%;
      padding: 10px;
      background-color: #a47551;
      color: #fff;
      border: none;
      border-radius: 8px;
      margin-top: 10px;
      cursor: pointer;
    }
    .form-section button[type="submit"]:hover {
      background-color: #8a6140;
    }
    .form-section p {
      margin-top: 1rem;
      color: #7a5c48;
    }
    .form-section a {
      color: #a47551;
      text-decoration: none;
    }
    .error-message {
      color: red;
      font-size: 0.75rem;
      min-height: 1rem;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="image-section">
      <img src="/img/signup.jpg" alt="Bag Image" />
    </div>
    <div class="form-section">
      <h2>Create Account</h2>
      <a href="/auth/google" class="google-btn">
        <img src="/img/Google_Icons-09-512.webp" alt="Google" />
        Sign up with Google
      </a>
      <div class="divider">or</div>
      <form id="signup-form" novalidate>
        <div>
          <input type="text" id="fullname" name="name" placeholder="Full Name" />
          <div id="fullname-error" class="error-message"></div>
        </div>
        <div>
          <input type="email" id="email" name="email" placeholder="Email"  />
          <div id="email-error" class="error-message"></div>
        </div>
        <div>
          <input type="password" id="password" name="password" placeholder="Password"  />
          <div id="password-error" class="error-message"></div>
        </div>
        <div>
          <input type="password" id="confirm-password" name="confirmPassword" placeholder="Confirm Password"  />
          <div id="confirm-password-error" class="error-message"></div>
        </div>
        <button type="submit" id="submit-btn">Sign Up</button>
      </form>
      <p>Already have an account? <a href="/login">Login</a></p>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const signupForm = document.getElementById("signup-form");
      const submitBtn = document.getElementById("submit-btn");
      const fullnameInput = document.getElementById("fullname");
      const emailInput = document.getElementById("email");
      const passwordInput = document.getElementById("password");
      const confirmPasswordInput = document.getElementById("confirm-password");
      const fullnameError = document.getElementById("fullname-error");
      const emailError = document.getElementById("email-error");
      const passwordError = document.getElementById("password-error");
      const confirmPasswordError = document.getElementById("confirm-password-error");

      function validateName() {
        const name = fullnameInput.value.trim();
        const namePattern = /^[A-Za-z\s]+$/;
        if (name === "") {
          fullnameError.textContent = "Please enter a name";
          return false;
        } else if (!namePattern.test(name)) {
          fullnameError.textContent = "Name can only contain letters and spaces";
          return false;
        } else {
          fullnameError.textContent = "";
          return true;
        }
      }

      function validateEmail() {
        const email = emailInput.value.trim();
        const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;
        if (!emailPattern.test(email)) {
          emailError.textContent = "Please enter a valid email";
          return false;
        } else {
          emailError.textContent = "";
          return true;
        }
      }

      function validatePassword() {
        const password = passwordInput.value;
        const alpha = /[a-zA-Z]/;
        const digit = /\d/;
        if (password.length < 8) {
          passwordError.textContent = "Password must be at least 8 characters long";
          return false;
        } else if (!alpha.test(password) || !digit.test(password)) {
          passwordError.textContent = "Password must contain letters and numbers";
          return false;
        } else {
          passwordError.textContent = "";
          return true;
        }
      }

      function validateConfirmPassword() {
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;
        if (password !== confirmPassword) {
          confirmPasswordError.textContent = "Passwords do not match";
          return false;
        } else {
          confirmPasswordError.textContent = "";
          return true;
        }
      }

      fullnameInput.addEventListener("input", validateName);
      emailInput.addEventListener("input", validateEmail);
      passwordInput.addEventListener("input", validatePassword);
      confirmPasswordInput.addEventListener("input", validateConfirmPassword);

      signupForm.addEventListener("submit", async function (e) {
        e.preventDefault();
        submitBtn.disabled = true;

        const isNameValid = validateName();
        const isEmailValid = validateEmail();
        const isPasswordValid = validatePassword();
        const isConfirmPasswordValid = validateConfirmPassword();

        if (isNameValid && isEmailValid && isPasswordValid && isConfirmPasswordValid) {
          try {
            const response = await fetch('/signup', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({
                name: fullnameInput.value,
                email: emailInput.value,
                password: passwordInput.value,
                confirmPassword: confirmPasswordInput.value
              })
            });

            const result = await response.json();
            if (result.success) {
              Swal.fire({
                icon: "success",
                title: "Success",
                text: result.message,
                timer: 1500,
                showConfirmButton: false
              }).then(() => {
                window.location.href = result.redirectUrl;
              });
            } else {
              Swal.fire({
                icon: "error",
                title: "Error",
                text: result.message
              });
            }
          } catch (error) {
            Swal.fire({
              icon: "error",
              title: "Error",
              text: "An error occurred. Please try again."
            });
          }
        }
        setTimeout(() => { submitBtn.disabled = false; }, 2000);
      });
    });
  </script>
</body>
</html>